@article{lean-tactics,
 author = {Ebner, Gabriel and Ullrich, Sebastian and Roesch, Jared and Avigad, Jeremy and de Moura, Leonardo},
 title = {A metaprogramming framework for formal verification},
 year = {2017},
 issue_date = {August 2017},
 publisher = {Association for Computing Machinery},
 address = {New York, NY, USA},
 volume = {1},
 % url = {https://doi.org/10.1145/3110278},
 doi = {10.1145/3110278},
 journal = {Proc. ACM Program. Lang.},
 month = aug,
 articleno = {Article 34},
 numpages = {29},
 keywords = {dependent type theory, theorem proving, metaprogramming, tactic language}
}

@InProceedings{lean-prover,
author="de Moura, Leonardo
and Kong, Soonho
and Avigad, Jeremy
and van Doorn, Floris
and von Raumer, Jakob",
editor="Felty, A. P.
and Middeldorp, A.",
title="The Lean theorem prover (system description)",
booktitle="Automated Deduction",
series="CADE-25",
year="2015",
publisher="Springer International Publishing",
address="Cham",
pages="378--388",
abstract="Lean is a new open source theorem prover being developed at Microsoft Research and Carnegie Mellon University, with a small trusted kernel based on dependent type theory. It aims to bridge the gap between interactive and automated theorem proving, by situating automated tools and methods in a framework that supports user interaction and the construction of fully specified axiomatic proofs. Lean is an ongoing and long-term effort, but it already provides many useful components, integrated development environments, and a rich API which can be used to embed it into other systems. It is currently being used to formalize category theory, homotopy type theory, and abstract algebra. We describe the project goals, system architecture, and main features, and we discuss applications and continuing work.",
}

@InProceedings{mathlib,
	title={The Lean mathematical library},
	author={{The mathlib Community}},
	year={2020},
	editor={Blanchette, J. and Hrițcu, C.},
	booktitle = {9th ACM SIGPLAN International Conference on Certified Programs and Proofs},
	series = {CPP 2020},
	publisher = {ACM},
}

@InProceedings{ring-tactic,
author="Gr{\'e}goire, Benjamin
and Mahboubi, Assia",
editor="Hurd, J.
and Melham, T.",
title="Proving equalities in a commutative ring done right in Coq",
booktitle="Theorem Proving in Higher Order Logics",
year="2005",
publisher="Springer Berlin Heidelberg",
pages="98--113",
abstract="We present a new implementation of a reflexive tactic which solves equalities in a ring structure inside the Coq system. The efficiency is improved to a point that we can now prove equalities that were previously beyond reach. A special care has been taken to implement efficient algorithms while keeping the complexity of the correctness proofs low. This leads to a single tool, with a single implementation, which can be addressed for a ring or for a semi-ring, abstract or not, using the Leibniz equality or a setoid equality. This example shows that such reflective methods can be effectively used in symbolic computation.",
}

@misc{norm-cast,
	title={Arithmetic and Casting in Lean},
	author={Paul-Nicolas Madelaine},
	year={2019},
	institution={Vrije Universiteit Amsterdam},
	note={MSc internship report},
}

@inproceedings{monad-transformers,
	author = {Liang, Sheng and Hudak, Paul and Jones, Mark},
	title = {Monad transformers and modular interpreters},
	booktitle = {Proceedings of the 22nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
	series = {POPL '95},
	year = {1995},
	location = {San Francisco, California, USA},
	pages = {333--343},
	numpages = {11},
	% url = {http://doi.acm.org/10.1145/199448.199528},
	doi = {10.1145/199448.199528},
	acmid = {199528},
	publisher = {ACM},
	address = {New York, NY, USA}
}

@inproceedings{coq-lattices,
author = {James, Daniel and Hinze, Ralf},
year = {2009},
month = {06},
day = {2-4},
numpages = {11},
title = {A reflection-based proof tactic for lattices in Coq},
booktitle = {Post-conference proceedings of the 10th Symposium on Trends in Functional Programming},
location = {Komarno, Slovakia},
publisher={Intellect},
series={TFP 2009},
}

@inproceedings{coq-assoc-comm,
 author = {Braibant, Thomas and Pous, Damien},
 title = {Tactics for Reasoning modulo AC in Coq},
 year = {2011},
 isbn = {9783642253782},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 doi = {10.1007/978-3-642-25379-9_14},
 booktitle = {Proceedings of the First International Conference on Certified Programs and Proofs},
 pages = {167–182},
 numpages = {16},
 location = {Kenting, Taiwan},
 series = {CPP’11}
}

@inproceedings{coq-ring-reflection,
 author = {Boutin, Samuel},
 title = {Using reflection to build efficient and certified decision procedures},
 year = {1997},
 isbn = {354063388X},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 booktitle = {Proceedings of the Third International Symposium on Theoretical Aspects of Computer Software},
 pages = {515–529},
 numpages = {15},
 series = {TACS ’97}
}

@InProceedings{resolution-rcf,
author="Akbarpour, Behzad
and Paulson, Lawrence C.",
editor="Dershowitz, Nachum
and Voronkov, Andrei",
title="Extending a resolution prover for inequalities on elementary functions",
booktitle="Logic for Programming, Artificial Intelligence, and Reasoning",
year="2007",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="47--61",
abstract="Experiments show that many inequalities involving exponentials and logarithms can be proved automatically by combining a resolution theorem prover with a decision procedure for the theory of real closed fields (RCF). The method should be applicable to any functions for which polynomial upper and lower bounds are known. Most bounds only hold for specific argument ranges, but resolution can automatically perform the necessary case analyses. The system consists of a superposition prover (Metis) combined with John Harrison's RCF solver and a small amount of code to simplify literals with respect to the RCF theory.",
isbn="978-3-540-75560-9"
}

@InProceedings{hol_light,
author="Harrison, John",
editor="Srivas, Mandayam
and Camilleri, Albert",
title="HOL Light: A tutorial introduction",
booktitle="Formal Methods in Computer-Aided Design",
year="1996",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="265--269",
abstract="HOL Light is a new version of the HOL theorem prover. While retaining the reliability and programmability of earlier versions, it is more elegant, lightweight, powerful and automatic; it will be the basis for the Cambridge component of the HOL-2000 initiative to develop the next generation of HOL theorem provers. HOL Light is written in CAML Light, and so will run well even on small machines, e.g. PCs and Macintoshes with a few megabytes of RAM. This is in stark contrast to the resource-hungry systems which are the norm in this field, other versions of HOL included. Among the new features of this version axe a powerful simplifier, effective first order automation, simple higher-order matching and very general support for inductive and recursive definitions.",
isbn="978-3-540-49567-3"
}

@book{isabelle_hol,
editor="Nipkow, Tobias
and Wenzel, Markus
and Paulson, Lawrence C.",
title="Isabelle/HOL: A Proof Assistant for Higher-Order Logic",
year="2002",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
abstract="This book is a tutorial on how to use the theorem prover Isabelle/HOL as a specification and verification system. Isabelle is a generic system for implementing logical formalisms, and Isabelle/HOL is the specialization of Isabelle for HOL,which abbreviates Higher-Order Logic. We introduce HOL step by step following the equation HOL = Functional Programming+ Logic.",
isbn="978-3-540-45949-1",
doi="10.1007/3-540-45949-9_1",
url="https://doi.org/10.1007/3-540-45949-9_1"
}


